<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzti.epa.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.zzti.epa.model.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="studentNum" property="studentNum" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="userface" property="userface" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="TINYINT" />
    <result column="classId" property="classId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="AllStudentInfo" type="map" extends="BaseResultMap">
    <result column="majorId" property="majorId" jdbcType="INTEGER" />
    <result column="schoolId" property="schoolId" jdbcType="INTEGER" />
    <association property="clazz" javaType="com.zzti.epa.model.Class">
      <id column="cid" property="id"/>
      <result column="cname" property="name"></result>
    </association>
  </resultMap>

  <select id="getStudentByPage" resultMap="AllStudentInfo">
    select c.id as cid, c.name as cname,c.majorId as majorId ,c.schoolId as schoolId,s.* from student s,class c
    where s.classId=c.id
    <if test="stu.name !=null and stu.name!=''">
      and s.name like concat('%',#{stu.name},'%')
    </if>
    <if test="stu.classId !=null">
      and s.classId =#{stu.classId}
    </if>
    <if test="page !=null and size!=null">
      limit #{page},#{size}
    </if>
  </select>
  <select id="getTotal" resultType="Long">
    select count(*) from student s,class c
    where s.classId=c.id
      <if test="stu.name !=null and stu.name!=''">
        and s.name like concat('%',#{stu.name},'%')
      </if>
      <if test="stu.classId !=null">
        and s.classId =#{stu.classId}
      </if>
  </select>

  <select id="getAllStudentByClassId" resultType="com.zzti.epa.model.Student">
    select * from student s where classId=#{classId}
  </select>

  <delete id="deleteStuByIds">
    delete from student where id in
    <foreach collection="ids" item="id" open="(" separator="," close=")">#{id}</foreach>
  </delete>

<insert id="addStus">
  insert into student(name,gender,username,studentNum,classId)
  values
  <foreach collection="list" separator="," item="stu">
    (#{stu.name,jdbcType=VARCHAR},
    #{stu.gender,jdbcType=CHAR},
    #{stu.username,jdbcType=VARCHAR},
    #{stu.studentNum,jdbcType=VARCHAR},
    #{stu.classId,jdbcType=INTEGER}
    )
  </foreach>
</insert>
  <select id="loadUserByUsername" resultMap="BaseResultMap">
    select * from student where username=#{username};
  </select>
  <update id="modifyPass" parameterType="com.zzti.epa.model.Student">
        update student set password = #{rePassword} where id=#{sno}
    </update>
  <select id="isExistStudentNum" resultType="Integer">
     select count(*) from student where studentNum=#{studentNum}
  </select>








  <sql id="Base_Column_List" >
    id, name, username, password, studentNum, gender, userface, enabled, classId, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzti.epa.model.Student" >
    insert into student (id, name, username, 
      password, studentNum, gender, 
      userface, enabled, classId, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{studentNum,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{userface,jdbcType=VARCHAR}, #{enabled,jdbcType=TINYINT}, #{classId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzti.epa.model.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="studentNum != null" >
        studentNum,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="userface != null" >
        userface,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="classId != null" >
        classId,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentNum != null" >
        #{studentNum,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="userface != null" >
        #{userface,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=TINYINT},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzti.epa.model.Student" >
    update student
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentNum != null" >
        studentNum = #{studentNum,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="userface != null" >
        userface = #{userface,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=TINYINT},
      </if>
      <if test="classId != null" >
        classId = #{classId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzti.epa.model.Student" >
    update student
    set name = #{name,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      studentNum = #{studentNum,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      userface = #{userface,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=TINYINT},
      classId = #{classId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>