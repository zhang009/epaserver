<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzti.epa.mapper.grade.StudentGradeMapper" >
  <resultMap id="BaseResultMap" type="com.zzti.epa.model.StudentGrade" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentNum" property="studentNum" jdbcType="VARCHAR" />
    <result column="studentName" property="studentName" jdbcType="VARCHAR" />
    <result column="courseId" property="courseId" jdbcType="INTEGER" />
    <result column="testPaperId" property="testPaperId" jdbcType="INTEGER" />
    <result column="totalGrade" property="totalGrade" jdbcType="REAL" />
    <result column="classId" property="classId" jdbcType="INTEGER" />
  </resultMap>

<!--write by writer start-->
<!--write by writer start-->
  <resultMap id="StudentGradeMap" type="com.zzti.epa.model.analysis.StudentGrade" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="studentNum" property="stuId" jdbcType="VARCHAR" />
    <result column="studentName" property="studentName" jdbcType="VARCHAR" />
    <result column="courseId" property="courseId" jdbcType="INTEGER" />
    <result column="testPaperId" property="paperId" jdbcType="INTEGER" />
    <result column="totalGrade" property="totalScore" jdbcType="REAL" />
    <result column="classId" property="classId" jdbcType="INTEGER" />
  </resultMap>
<!--  根据试卷id查询成绩表-->
<select id="getStudentGradeOfListByTestPaperId" resultMap="StudentGradeMap" parameterType="java.lang.Integer">
  select * from student_grade where testPaperId = #{testPaperId}
</select>
<!--  根据班级id和试卷id查询成绩表-->
<select id="getStudentGradeOfListByClassIdAndTestpaperId"  resultMap="StudentGradeMap" parameterType="java.lang.Integer">
    select * from student_grade where classId=#{classId} and testPaperId=#{testpaperId}
</select>
<!--write by writer end-->
<!--write by writer end-->

  <resultMap id="AllStudentGradesByPageWithClass" type="com.zzti.epa.model.StudentGrade" extends="BaseResultMap">
    <association property="clazz" javaType="com.zzti.epa.model.Class">
      <id column="cid" property="id"/>
      <result column="cname" property="name"/>
    </association>
  </resultMap>

  <select id="getStudentGrades" resultMap="AllStudentGradesByPageWithClass">
    select sg.*,c.id as cid ,c.name as cname from student_grade sg,class c
    where sg.classId=c.id

      <if test="studentGrade.classId !=null">
        and sg.classId =#{studentGrade.classId}
      </if>
      <if test="studentGrade.testPaperId !=null">
        and sg.testPaperId =#{studentGrade.testPaperId}
      </if>
      <if test="studentGrade.studentName !=null">
        and sg.studentName  like concat('%',#{studentGrade.studentName},'%')
      </if>
    ORDER BY studentNum
      <if test="page !=null and size!=null">
        limit #{page},#{size}
      </if>


  </select>

  <select id="getStudentGradesTotal" resultType="Long">
    select count(*) from student_grade sg
    <where>
      <if test="studentGrade.classId !=null">
        and sg.classId =#{studentGrade.classId}
      </if>
      <if test="studentGrade.studentName !=null">
        and sg.studentName  like concat('%',#{studentGrade.studentName},'%')
      </if>
    </where>
  </select>
  <select id="allOnlyStudentGrades" resultType="com.zzti.epa.model.StudentGrade">
    select * from student_grade sg
    <where>
      <if test="studentGrade.classId !=null">
        and sg.classId =#{studentGrade.classId}
      </if>
      <if test="studentGrade.testPaperId !=null">
        and sg.testPaperId =#{studentGrade.testPaperId}
      </if>
    </where>
  </select>












  <sql id="Base_Column_List" >
    id, studentNum, studentName, courseId, testPaperId, totalGrade, classId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student_grade
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_grade
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzti.epa.model.StudentGrade" useGeneratedKeys="true" keyProperty="id">
    insert into student_grade (id, studentNum, studentName, 
      courseId, testPaperId, totalGrade,
       classId)
    values (#{id,jdbcType=INTEGER}, #{studentNum,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, 
      #{courseId,jdbcType=INTEGER}, #{testPaperId,jdbcType=INTEGER}, #{totalGrade,jdbcType=REAL},
      #{classId,jdbcType=INTEGER} )
  </insert>
  <insert id="insertSelective" parameterType="com.zzti.epa.model.StudentGrade"  useGeneratedKeys="true" keyProperty="id">
    insert into student_grade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentNum != null" >
        studentNum,
      </if>
      <if test="studentName != null" >
        studentName,
      </if>
      <if test="courseId != null" >
        courseId,
      </if>
      <if test="testPaperId != null" >
        testPaperId,
      </if>
      <if test="totalGrade != null" >
        totalGrade,
      </if>
      <if test="classId != null" >
        classId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentNum != null" >
        #{studentNum,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="testPaperId != null" >
        #{testPaperId,jdbcType=INTEGER},
      </if>
      <if test="totalGrade != null" >
        #{totalGrade,jdbcType=REAL},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzti.epa.model.StudentGrade" >
    update student_grade
    <set >
      <if test="studentNum != null" >
        studentNum = #{studentNum,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        studentName = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        courseId = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="testPaperId != null" >
        testPaperId = #{testPaperId,jdbcType=INTEGER},
      </if>
      <if test="totalGrade != null" >
        totalGrade = #{totalGrade,jdbcType=REAL},
      </if>
      <if test="classId != null" >
        classId = #{classId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzti.epa.model.StudentGrade" >
    update student_grade
    set studentNum = #{studentNum,jdbcType=VARCHAR},
      studentName = #{studentName,jdbcType=VARCHAR},
      courseId = #{courseId,jdbcType=INTEGER},
      testPaperId = #{testPaperId,jdbcType=INTEGER},
      totalGrade = #{totalGrade,jdbcType=REAL},
       classId = #{classId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>