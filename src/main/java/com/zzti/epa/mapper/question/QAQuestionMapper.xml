<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzti.epa.mapper.question.QAQuestionMapper" >
  <resultMap id="BaseResultMap" type="com.zzti.epa.model.QAQuestion" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="knowIds" property="knowIds" jdbcType="VARCHAR" />
    <result column="stem" property="stem" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="analysis" property="analysis" jdbcType="VARCHAR" />
    <result column="teacherId" property="teacherId" jdbcType="INTEGER" />
    <result column="chapterId" property="chapterId" jdbcType="INTEGER" />
    <result column="dot" property="dot" jdbcType="INTEGER" />
    <result column="checkTeacherId" property="checkTeacherId" jdbcType="INTEGER" />
    <result column="courseId" property="courseId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="AllQAQuestionInfo" type="com.zzti.epa.model.QAQuestion" extends="BaseResultMap">
    <association property="teacher" javaType="com.zzti.epa.model.Teacher">
      <id column="tid" property="id"/>
      <result column="tname" property="name"></result>
    </association>
    <collection property="knows" ofType="com.zzti.epa.model.Knows">
      <id column="kid" property="id"/>
      <result column="kname" property="name"/>
    </collection>
  </resultMap>

  <select id="getQAQuestionByPage" resultMap="AllQAQuestionInfo">
    select qa.*,t.id as tid,t.name as tname,k.id as kid, k.name as kname from qa_question qa ,teacher t,knows k
where qa.teacherId=t.id
			and qa.chapterId=k.chapterId
    <if test="qa.courseId !=null and qa.chapterId!=null">
      and qa.courseId=#{qa.courseId}
      and qa.chapterId =#{qa.chapterId}
    </if>
    <if test="qa.courseId !=null">
      and qa.chapterId =#{qa.chapterId}
    </if>
  </select>
  <select id="getTotal" resultType="Long">
    select count(*) from qa_question qa
    <where>

      <if test="qa.courseId !=null and qa.chapterId!=null">
        and qa.courseId=#{qa.courseId}
        and qa.chapterId =#{qa.chapterId}
      </if>
      <if test="qa.courseId !=null">
        and qa.chapterId =#{qa.chapterId}
      </if>
    </where>

  </select>















  <sql id="Base_Column_List" >
    id, knowIds, stem, answer, analysis, teacherId, chapterId, dot, checkTeacherId, courseId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from qa_question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from qa_question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzti.epa.model.QAQuestion" >
    insert into qa_question (id, knowIds, stem, 
      answer, analysis, teacherId, 
      chapterId, dot, checkTeacherId, 
      courseId)
    values (#{id,jdbcType=INTEGER}, #{knowIds,jdbcType=VARCHAR}, #{stem,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{analysis,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}, 
      #{chapterId,jdbcType=INTEGER}, #{dot,jdbcType=INTEGER}, #{checkTeacherId,jdbcType=INTEGER}, 
      #{courseId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zzti.epa.model.QAQuestion" useGeneratedKeys="true" keyProperty="id">
    insert into qa_question
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="knowIds != null" >
        knowIds,
      </if>
      <if test="stem != null" >
        stem,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="analysis != null" >
        analysis,
      </if>
      <if test="teacherId != null" >
        teacherId,
      </if>
      <if test="chapterId != null" >
        chapterId,
      </if>
      <if test="dot != null" >
        dot,
      </if>
      <if test="checkTeacherId != null" >
        checkTeacherId,
      </if>
      <if test="courseId != null" >
        courseId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="knowIds != null" >
        #{knowIds,jdbcType=VARCHAR},
      </if>
      <if test="stem != null" >
        #{stem,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="analysis != null" >
        #{analysis,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null" >
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="dot != null" >
        #{dot,jdbcType=INTEGER},
      </if>
      <if test="checkTeacherId != null" >
        #{checkTeacherId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzti.epa.model.QAQuestion" >
    update qa_question
    <set >
      <if test="knowIds != null" >
        knowIds = #{knowIds,jdbcType=VARCHAR},
      </if>
      <if test="stem != null" >
        stem = #{stem,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="analysis != null" >
        analysis = #{analysis,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        teacherId = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null" >
        chapterId = #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="dot != null" >
        dot = #{dot,jdbcType=INTEGER},
      </if>
      <if test="checkTeacherId != null" >
        checkTeacherId = #{checkTeacherId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        courseId = #{courseId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzti.epa.model.QAQuestion" >
    update qa_question
    set knowIds = #{knowIds,jdbcType=VARCHAR},
      stem = #{stem,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      analysis = #{analysis,jdbcType=VARCHAR},
      teacherId = #{teacherId,jdbcType=INTEGER},
      chapterId = #{chapterId,jdbcType=INTEGER},
      dot = #{dot,jdbcType=INTEGER},
      checkTeacherId = #{checkTeacherId,jdbcType=INTEGER},
      courseId = #{courseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>