<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzti.epa.mapper.question.QuestionCheckMapper" >
  <resultMap id="BaseResultMap" type="com.zzti.epa.model.QuestionCheck" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="questionId" property="questionid" jdbcType="INTEGER" />
    <result column="postTeacherId" property="postteacherid" jdbcType="INTEGER" />
    <result column="checkTeacherId" property="checkteacherid" jdbcType="INTEGER" />
    <result column="checkStatus" property="checkstatus" jdbcType="TINYINT" />
    <result column="refuseReason" property="refusereason" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, questionId, postTeacherId, checkTeacherId, checkStatus, refuseReason
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from question_check
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from question_check
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzti.epa.model.QuestionCheck" >
    insert into question_check (id, questionId, postTeacherId, 
      checkTeacherId, checkStatus, refuseReason
      )
    values (#{id,jdbcType=INTEGER}, #{questionid,jdbcType=INTEGER}, #{postteacherid,jdbcType=INTEGER}, 
      #{checkteacherid,jdbcType=INTEGER}, #{checkstatus,jdbcType=TINYINT}, #{refusereason,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzti.epa.model.QuestionCheck" >
    insert into question_check
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="questionid != null" >
        questionId,
      </if>
      <if test="postteacherid != null" >
        postTeacherId,
      </if>
      <if test="checkteacherid != null" >
        checkTeacherId,
      </if>
      <if test="checkstatus != null" >
        checkStatus,
      </if>
      <if test="refusereason != null" >
        refuseReason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="questionid != null" >
        #{questionid,jdbcType=INTEGER},
      </if>
      <if test="postteacherid != null" >
        #{postteacherid,jdbcType=INTEGER},
      </if>
      <if test="checkteacherid != null" >
        #{checkteacherid,jdbcType=INTEGER},
      </if>
      <if test="checkstatus != null" >
        #{checkstatus,jdbcType=TINYINT},
      </if>
      <if test="refusereason != null" >
        #{refusereason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzti.epa.model.QuestionCheck" >
    update question_check
    <set >
      <if test="questionid != null" >
        questionId = #{questionid,jdbcType=INTEGER},
      </if>
      <if test="postteacherid != null" >
        postTeacherId = #{postteacherid,jdbcType=INTEGER},
      </if>
      <if test="checkteacherid != null" >
        checkTeacherId = #{checkteacherid,jdbcType=INTEGER},
      </if>
      <if test="checkstatus != null" >
        checkStatus = #{checkstatus,jdbcType=TINYINT},
      </if>
      <if test="refusereason != null" >
        refuseReason = #{refusereason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzti.epa.model.QuestionCheck" >
    update question_check
    set questionId = #{questionid,jdbcType=INTEGER},
      postTeacherId = #{postteacherid,jdbcType=INTEGER},
      checkTeacherId = #{checkteacherid,jdbcType=INTEGER},
      checkStatus = #{checkstatus,jdbcType=TINYINT},
      refuseReason = #{refusereason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>