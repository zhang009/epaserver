<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzti.epa.mapper.question.QuestionCheckMapper" >
  <resultMap id="BaseResultMap" type="com.zzti.epa.model.QuestionCheck" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="questionId" property="questionId" jdbcType="INTEGER" />
    <result column="postTeacherId" property="postTeacherId" jdbcType="INTEGER" />
    <result column="checkTeacherId" property="checkTeacherId" jdbcType="INTEGER" />
    <result column="checkStatus" property="checkStatus" jdbcType="TINYINT" />
    <result column="questionType" property="questionType" jdbcType="VARCHAR" />
    <result column="postTime" property="postTime" jdbcType="TIMESTAMP" />
    <result column="refuseReason" property="refuseReason" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="QuestionCheckWithTeacher" type="com.zzti.epa.model.QuestionCheck" extends="BaseResultMap">
    <association property="postTeacher" javaType="com.zzti.epa.model.Teacher">
      <id column="tid" property="id"/>
      <result column="tname" property="name"></result>
    </association>

  </resultMap>
  <resultMap id="QuestionCheckWithTeacher2" type="com.zzti.epa.model.QuestionCheck" extends="BaseResultMap">
    <association property="checkTeacher" javaType="com.zzti.epa.model.Teacher">
      <id column="tid" property="id"/>
      <result column="tname" property="name"></result>
    </association>

  </resultMap>

  <select id="getQuestionCheckByCheckTId" resultMap="QuestionCheckWithTeacher">
    select qc.*,t.id as tid,t.name as tname from question_check qc,teacher t
        where qc.postTeacherId=t.id
        and qc.checkTeacherId=#{tId}
    <if test="page !=null and size!=null">
      limit #{page},#{size}
    </if>
  </select>
  <select id="getTotal" resultType="Long">
    select count(*) from question_check qc
    where qc.checkTeacherId=#{id}

  </select>

  <select id="getQuestionReceiveByCheckTId" resultMap="QuestionCheckWithTeacher2">
     select qc.*,t.id as tid,t.name as tname from question_check qc,teacher t
        where qc.checkTeacherId=t.id
        and qc.postTeacherId=#{tId}
    <if test="page !=null and size!=null">
      limit #{page},#{size}
    </if>
  </select>
  <select id="getTotal2" resultType="Long">
    select count(*) from question_check qc
    where qc.postTeacherId=#{id}

  </select>

  <update id="passQuestionCheck" parameterType="Integer">
    update question_check set checkStatus=1
        where id=#{id}

  </update>
  <update id="refuseQuestionCheck">
    update question_check set checkStatus=2,refuseReason=#{reason}
    where id=#{id}
  </update>

  <update id="updateStatusByQueIdAndType">
    update question_check set checkStatus=0
    where questionType=#{type} and questionId=#{qId}
  </update>







  <sql id="Base_Column_List" >
    id, questionId, postTeacherId, checkTeacherId, checkStatus, questionType, refuseReason
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from question_check
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from question_check
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzti.epa.model.QuestionCheck" >
    insert into question_check (id, questionId, postTeacherId, 
      checkTeacherId, checkStatus, questionType, 
      refuseReason)
    values (#{id,jdbcType=INTEGER}, #{questionId,jdbcType=INTEGER}, #{postTeacherId,jdbcType=INTEGER}, 
      #{checkTeacherId,jdbcType=INTEGER}, #{checkStatus,jdbcType=TINYINT}, #{questionType,jdbcType=VARCHAR}, 
      #{refuseReason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzti.epa.model.QuestionCheck" useGeneratedKeys="true" keyProperty="id">
    insert into question_check
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="questionId != null" >
        questionId,
      </if>
      <if test="postTeacherId != null" >
        postTeacherId,
      </if>
      <if test="checkTeacherId != null" >
        checkTeacherId,
      </if>
      <if test="checkStatus != null" >
        checkStatus,
      </if>
      <if test="questionType != null" >
        questionType,
      </if>
      <if test="refuseReason != null" >
        refuseReason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="postTeacherId != null" >
        #{postTeacherId,jdbcType=INTEGER},
      </if>
      <if test="checkTeacherId != null" >
        #{checkTeacherId,jdbcType=INTEGER},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=TINYINT},
      </if>
      <if test="questionType != null" >
        #{questionType,jdbcType=VARCHAR},
      </if>
      <if test="refuseReason != null" >
        #{refuseReason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzti.epa.model.QuestionCheck" >
    update question_check
    <set >
      <if test="questionId != null" >
        questionId = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="postTeacherId != null" >
        postTeacherId = #{postTeacherId,jdbcType=INTEGER},
      </if>
      <if test="checkTeacherId != null" >
        checkTeacherId = #{checkTeacherId,jdbcType=INTEGER},
      </if>
      <if test="checkStatus != null" >
        checkStatus = #{checkStatus,jdbcType=TINYINT},
      </if>
      <if test="questionType != null" >
        questionType = #{questionType,jdbcType=VARCHAR},
      </if>
      <if test="refuseReason != null" >
        refuseReason = #{refuseReason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzti.epa.model.QuestionCheck" >
    update question_check
    set questionId = #{questionId,jdbcType=INTEGER},
      postTeacherId = #{postTeacherId,jdbcType=INTEGER},
      checkTeacherId = #{checkTeacherId,jdbcType=INTEGER},
      checkStatus = #{checkStatus,jdbcType=TINYINT},
      questionType = #{questionType,jdbcType=VARCHAR},
      refuseReason = #{refuseReason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>